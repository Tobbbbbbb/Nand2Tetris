function Board.new 0
push constant 3
call Memory.alloc 1
pop pointer 0
push constant 23
call Array.new 1
pop this 0
push constant 0
push this 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push this 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 216
pop this 1
push constant 24
pop this 2
push this 1
push constant 3
sub
push this 2
push this 1
push constant 2
sub
push this 2
push constant 185
add
call Screen.drawRectangle 4
pop temp 0
push this 1
push constant 81
add
push this 2
push this 1
push constant 82
add
push this 2
push constant 185
add
call Screen.drawRectangle 4
pop temp 0
push this 1
push constant 3
sub
push this 2
push constant 185
add
push this 1
push constant 82
add
push this 2
push constant 186
add
call Screen.drawRectangle 4
pop temp 0
push this 1
push constant 3
sub
push this 2
push constant 23
add
push this 1
push constant 82
add
push this 2
push constant 24
add
call Screen.drawRectangle 4
pop temp 0
push pointer 0
return
function Board.drawPixel 3
push argument 0
pop pointer 0
push constant 1
pop local 1
push constant 0
pop local 2
label WHILE_EXP0
push local 2
push constant 9
push argument 1
sub
lt
not
if-goto WHILE_END0
push local 1
push constant 2
call Math.multiply 2
pop local 1
push local 2
push constant 1
add
pop local 2
goto WHILE_EXP0
label WHILE_END0
push argument 2
push this 0
add
pop pointer 1
push that 0
pop local 0
push local 0
push local 1
or
pop local 0
push argument 2
push this 0
add
push local 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push this 1
push argument 1
push constant 8
call Math.multiply 2
add
push constant 1
add
push this 2
push argument 2
push constant 8
call Math.multiply 2
add
push constant 1
add
push this 1
push argument 1
push constant 8
call Math.multiply 2
add
push constant 6
add
push this 2
push argument 2
push constant 8
call Math.multiply 2
add
push constant 6
add
call Screen.drawRectangle 4
pop temp 0
push constant 0
return
function Board.clearLine 1
push argument 0
pop pointer 0
push argument 1
push this 0
add
pop pointer 1
push that 0
push constant 1023
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
call Screen.setColor 1
pop temp 0
push this 1
push constant 1
add
push this 2
push argument 1
push constant 8
call Math.multiply 2
add
push constant 1
add
push this 1
push constant 78
add
push this 2
push argument 1
push constant 8
call Math.multiply 2
add
push constant 6
add
call Screen.drawRectangle 4
pop temp 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push constant 100
call Sys.wait 1
pop temp 0
push argument 1
pop local 0
label WHILE_EXP0
push local 0
push constant 0
gt
push local 0
push this 0
add
pop pointer 1
push that 0
push constant 0
gt
and
not
if-goto WHILE_END0
push local 0
push this 0
add
push local 0
push constant 1
sub
push this 0
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
sub
pop local 0
goto WHILE_EXP0
label WHILE_END0
push local 0
push this 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push argument 1
pop local 0
label WHILE_EXP1
push local 0
push this 0
add
pop pointer 1
push that 0
push constant 0
gt
not
if-goto WHILE_END1
push constant 0
call Screen.setColor 1
pop temp 0
push this 1
push constant 1
add
push this 2
push local 0
push constant 8
call Math.multiply 2
add
push constant 1
add
push this 1
push constant 78
add
push this 2
push local 0
push constant 8
call Math.multiply 2
add
push constant 6
add
call Screen.drawRectangle 4
pop temp 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push pointer 0
push local 0
call Board.drawLine 2
pop temp 0
push local 0
push constant 1
sub
pop local 0
goto WHILE_EXP1
label WHILE_END1
push constant 0
call Screen.setColor 1
pop temp 0
push this 1
push constant 1
add
push this 2
push local 0
push constant 8
call Math.multiply 2
add
push constant 1
add
push this 1
push constant 78
add
push this 2
push local 0
push constant 8
call Math.multiply 2
add
push constant 6
add
call Screen.drawRectangle 4
pop temp 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push constant 1
return
label IF_FALSE0
push constant 0
return
function Board.drawLine 3
push argument 0
pop pointer 0
push constant 512
pop local 0
push constant 0
pop local 2
push argument 1
push this 0
add
pop pointer 1
push that 0
pop local 1
label WHILE_EXP0
push local 2
push constant 10
lt
not
if-goto WHILE_END0
push local 1
push local 0
gt
push local 1
push local 0
eq
or
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 1
push local 0
sub
pop local 1
push this 1
push local 2
push constant 8
call Math.multiply 2
add
push constant 1
add
push this 2
push argument 1
push constant 8
call Math.multiply 2
add
push constant 1
add
push this 1
push local 2
push constant 8
call Math.multiply 2
add
push constant 6
add
push this 2
push argument 1
push constant 8
call Math.multiply 2
add
push constant 6
add
call Screen.drawRectangle 4
pop temp 0
label IF_FALSE0
push local 0
push constant 2
call Math.divide 2
pop local 0
push local 2
push constant 1
add
pop local 2
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Board.lose 0
push argument 0
pop pointer 0
push constant 2
push this 0
add
pop pointer 1
push that 0
push constant 0
gt
push constant 1
push this 0
add
pop pointer 1
push that 0
push constant 0
gt
or
push constant 0
push this 0
add
pop pointer 1
push that 0
push constant 0
gt
or
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
return
label IF_FALSE0
push constant 0
return
function Board.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Board.getStartY 0
push argument 0
pop pointer 0
push this 2
return
function Board.getStartX 0
push argument 0
pop pointer 0
push this 1
return
function Board.getPixel 3
push argument 0
pop pointer 0
push constant 0
pop local 1
push constant 512
pop local 0
label WHILE_EXP0
push local 1
push argument 1
lt
not
if-goto WHILE_END0
push local 0
push constant 2
call Math.divide 2
pop local 0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push argument 2
push this 0
add
pop pointer 1
push that 0
push local 0
and
pop local 2
push local 2
push constant 0
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
return
label IF_FALSE0
push constant 0
return
